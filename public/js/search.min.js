async function getPosts(){const e=await fetch("/search.json");if(e.status==200){const t=e.json().then();return t}throw new Error(e.status)}const searchParams=new URLSearchParams(window.location.search),query=searchParams.get("query");if(query){const e=getPosts();e.then(e=>{const t=lunr(function(){this.ref("seq"),this.field("title"),this.field("summary"),this.field("tags"),e.map(e=>{this.add({seq:e.seq,title:e.title,tags:e.tags,summary:e.summary})})}),n=t.search(query);displayResults(n,e,query)})}function displayResults(e,t,n){const s=document.getElementById("search-result-info"),o=document.getElementById("result"),i=document.getElementById("no-result-tip");if(e.length==0)s.innerHTML=`No Results Founds for "${n}"`,i.style.display="block";else{s.innerHTML=e.length===1?`${e.length} RFC Found for "${n}"`:`${e.length} RFCs Found for "${n}"`;let i="";e.map(e=>{const n=e.ref-1,o=new Date(t[n].lastmod),a=o.toLocaleDateString("en-us",{year:"numeric",month:"short"}),s=t[n].closed;i+=`
				<div class="list-items">
					<a id="number" href=${t[n].uri}>
						${t[n].seq.toString().padStart(3,"0")}
					</a>
					<div id="title">${t[n].title}</div>
					<div id="summary">${t[n].summary}</div>
					<div id="tags">
			`,t[n].tags.map(e=>{i+=`
						<a id="tag" href=/tags/${e}>
							${e}
						</a>
				`}),i+=`
						<a id="tag" class="tag-date">
							${a}
							<span class="tooltip-date">The last modified date</span>
						</a>
						<a id="tag" class=${s?"status-closed":"status-open"}>
							${s?"CLOSED":"OPEN"}
							<span class="tooltip-status">The status of RFC</span>
						</a>
					</div>
				</div>
			<hr>`}),o.innerHTML+=i}}